buildscript {
  dependencies {
    ext {
      dockerPluginVersion = "6.7.0"
    }
    classpath "com.bmuschko:gradle-docker-plugin:${dockerPluginVersion}"
  }
}

plugins {
  // Apply the java plugin to add support for Java
  id 'java'
  id 'idea'
  id 'org.springframework.boot' version '2.7.7'
  id 'io.spring.dependency-management' version '1.1.0'
}

ext {
  set('dgsVersion', '5.6.1')
  set('dgsCodegenVersion', '6.1.4')
  set('mybatisPlusVersion', '3.4.1')
  set('springfoxVersion', '3.0.0')
  set('mysqlDriverVersion', '8.0.25')
  set('lombokVersion', '1.18.20')
  set('hutoolVersion', '4.5.7')
  set('velocityVersion', '2.3')
  set('jjwtVersion', '0.9.1')
  set('emailSenderVersion', '1.0.0')
  set('easyexcelVersion', '3.0.5')
  set('scResponseVersion', '0.0.6')
  set('scMybatisCommonVersion', '0.0.5')
  set('mailVersion', '1.4.7')
  set('activationVersion', '1.1.1')
  set('freemarkerVersion', '2.3.31')
  set('docx4jVersion', '3.3.7')
  set('druidVersion', '1.2.15')
  set('bouncyCastleVersion', '1.70')
  set('springCloudConfigVersion', '3.1.5')
}

jar.enabled(true)
bootJar.enabled(false)

allprojects { project ->
  apply plugin: 'org.springframework.boot'
  apply plugin: 'io.spring.dependency-management'
  apply plugin: "java"
  apply plugin: "idea"

  group 'com.bcs.atp'
  version '1.0.0-SNAPSHOT'

  idea {
    module {
      downloadSources = true
    }
  }

  compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    options.encoding = 'UTF-8'
  }

  compileTestJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    options.encoding = 'UTF-8'
  }

  configurations {
    compileOnly {
      extendsFrom annotationProcessor
    }
  }

  jar {
    manifest {
      attributes(
        "Implementation-Title": project.name,
        "Implementation-Version": project.version,
        "Build-JDK": "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
        "Build-OS": "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
      )
    }
  }

  repositories {
    mavenLocal()
  }

  dependencies {
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
      exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
  }

  test {
    useJUnitPlatform()
  }

  project.afterEvaluate {
    if (project.bootJar.enabled) {
      project.apply from: "${rootDir}/gradle/docker.gradle"
    }
  }

}
